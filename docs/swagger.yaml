basePath: /api/v1
definitions:
  auth.AuthResponse:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  auth.LoginValidator:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.RegisterValidator:
    properties:
      email:
        type: string
      password:
        maxLength: 64
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  links.LinkResponse:
    properties:
      alias:
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      real_url:
        type: string
    type: object
  utils.CommonError:
    properties:
      description:
        type: string
      message:
        type: string
    type: object
  utils.CommonValidationError:
    properties:
      validation-errors:
        additionalProperties:
          type: string
        type: object
    type: object
host: localhost:80
info:
  contact:
    email: wenzzy.belkov@gmail.com
    name: Wenzzy Belkov
    url: https://github.com/WenzzyX
  description: This is a sample server for create short urls.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Go-Ushorter API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.LoginValidator'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AuthResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.CommonError'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.CommonValidationError'
      summary: User login
      tags:
      - Auth
  /auth/logout:
    delete:
      consumes:
      - application/json
      parameters:
      - default: refresh_token="..."
        description: Required Cookie
        in: header
        name: cookie
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: Empty response
      summary: Logout (clear refresh token from cookies)
      tags:
      - Auth
  /auth/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - default: refresh_token="..."
        description: Cookie
        in: header
        name: cookie
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AuthResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/utils.CommonError'
      summary: Refresh token pair
      tags:
      - Auth
  /auth/registration:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request Body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/auth.RegisterValidator'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.AuthResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/utils.CommonValidationError'
      summary: User registration
      tags:
      - Auth
  /links:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/links.LinkResponse'
            type: array
      security:
      - BearerAuth: []
      summary: Get all links for user
      tags:
      - Links
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
